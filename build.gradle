plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'java'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

def ENV = System.getenv()

archivesBaseName = "energy"
group = "teamreborn"
version = project.mod_version

sourceSets {
	testmod {
		compileClasspath += sourceSets.main.compileClasspath
		runtimeClasspath += sourceSets.main.runtimeClasspath
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modApi fabricApi.module("fabric-transfer-api-v1", project.fabric_version)

	testmodImplementation 'junit:junit:4.13.2'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

jar {
	from "LICENSE"
}

java {
	withSourcesJar()
}

loom {
	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'teamreborn'
			artifactId project.archivesBaseName
			version project.version

			from components.java
		}
	}
	repositories {
		if (ENV.MAVEN_URL) {
			maven {
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}

// A task to ensure that the version being released has not already been released.
task checkVersion {
	doFirst {
		def xml = new URL("https://maven.fabricmc.net/teamreborn/energy/maven-metadata.xml").text
		def metadata = new XmlSlurper().parseText(xml)
		def versions = metadata.versioning.versions.version*.text();
		if (versions.contains(version)) {
			throw new RuntimeException("${version} has already been released!")
		}
	}
}
publish.mustRunAfter checkVersion